CREATE DATABASE QUANLITMDT
USE QUANLITMDT

-- Bảng USER (KHÁCHHÀNG + ADMIN)
CREATE TABLE NGUOIDUNG
(
    MaKH INT PRIMARY KEY IDENTITY(1,1),
    HoTen NVARCHAR(100) NOT NULL,
    GioiTinh NVARCHAR(10),
    NgaySinh DATE,
    VaiTro NVARCHAR(10) CHECK (VaiTro IN ('Admin','User')) NOT NULL,
    MatKhau NVARCHAR(100) NOT NULL, 
    TaiKhoan NVARCHAR(50) UNIQUE NOT NULL,
    Email NVARCHAR(100) UNIQUE,
    SDT VARCHAR(20) UNIQUE,
    DiaChi NVARCHAR(200),
    AnhDaiDien NVARCHAR(255) DEFAULT 'LUU HINH O DAY NE.JPG',
    NgayTao DATETIME DEFAULT GETDATE()
);

-- Bảng LOẠI SẢN PHẨM
CREATE TABLE LOAISANPHAM (
    MaLoai INT PRIMARY KEY IDENTITY(1,1),
    TenLoai NVARCHAR(100) NOT NULL
);

-- Bảng SẢN PHẨM
CREATE TABLE SANPHAM (
    MaSP INT PRIMARY KEY IDENTITY(1,1),
    MaKH INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),       
    MaLoai INT FOREIGN KEY REFERENCES LoaiSanPham(MaLoai),
    TenSP NVARCHAR(200) NOT NULL,
    MoTa NVARCHAR(MAX),
    Gia DECIMAL(18,2) CHECK (Gia >= 0),   
    SoLuong INT CHECK (SoLuong >= 0),
    TrangThai NVARCHAR(20) DEFAULT N'Chờ duyệt' 
        CHECK (TrangThai IN (N'Chờ duyệt', N'Đã duyệt', N'Đã bán', N'Ẩn')),
    NgayTao DATETIME DEFAULT GETDATE()
);

CREATE TABLE HINHANHSP (
    MaHA INT PRIMARY KEY IDENTITY,
    Masp INT FOREIGN KEY REFERENCES SanPham(MaSP) ON DELETE CASCADE,
    URLAnh NVARCHAR(255) NOT NULL,
    AnhBia BIT DEFAULT 0  
);


-- Bảng GIỎ HÀNG
CREATE TABLE GIOHANG (
    MaGH INT PRIMARY KEY IDENTITY(1,1),
    MaKH INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH)

);

-- Bảng CHI TIẾT GIỎ HÀNG
CREATE TABLE CT_GIOHANG (
    MaGH INT FOREIGN KEY REFERENCES GioHang(MaGH),
    MaSP INT FOREIGN KEY REFERENCES SanPham(MaSP) ON DELETE CASCADE,
    SoLuong INT CHECK (SoLuong > 0),
    ThanhTien DECIMAL(18,2) CHECK (ThanhTien >= 0),
    PRIMARY KEY (MaGH, MaSP)
);

-- Bảng HÓA ĐƠN
CREATE TABLE HOADON (
    MaHD INT PRIMARY KEY IDENTITY(1,1),
    MaKH INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),
    TongTien DECIMAL(18,2) CHECK (TongTien >= 0),
    PhuongThucTT NVARCHAR(50),
    NgayTT DATETIME,
    NgayDat DATETIME DEFAULT GETDATE(),
	TrangThai NVARCHAR(20) DEFAULT N'Đang chờ xử lý'
        CHECK (TrangThai IN (N'Đang chờ xử lý', N'Đã thanh toán', N'Đang vận chuyển', N'Đã giải quyết', N'Đã Huỷ'))				
);

-- Bảng CHI TIẾT HÓA ĐƠN
CREATE TABLE CT_HOADON (
    MaHD INT FOREIGN KEY REFERENCES HoaDon(MaHD),
    MaSP INT FOREIGN KEY REFERENCES SanPham(MaSP),
    SoLuong INT CHECK (SoLuong > 0),
    ThanhTien DECIMAL(18,2) CHECK (ThanhTien >= 0),
    PRIMARY KEY (MaHD, MaSP)
);

-- Bảng ĐÁNH GIÁ
CREATE TABLE DANHGIA (
    MaDG INT PRIMARY KEY IDENTITY(1,1),
    MaKH INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),
    MaSP INT FOREIGN KEY REFERENCES SanPham(MaSP) ON DELETE CASCADE,
    SoSao INT CHECK (SoSao BETWEEN 1 AND 5),
    NoiDung NVARCHAR(MAX),
    NgayDG DATETIME DEFAULT GETDATE()
);

-- Bảng KHIẾU NẠI
CREATE TABLE KHIEUNAI (
    MaKN INT PRIMARY KEY IDENTITY(1,1),
    MaKH INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),
    MaSP INT FOREIGN KEY REFERENCES SanPham(MaSP) ON DELETE CASCADE,
    MoTa NVARCHAR(MAX),
	TrangThai NVARCHAR(20) DEFAULT N'Chưa xử lý'
    CHECK (TrangThai IN (N'Chưa xử lý', N'Đang xử lý', N'Đã giải quyết'))

);

-- Bảng TIN NHẮN
CREATE TABLE TINNHAN (
    MaTN INT PRIMARY KEY IDENTITY(1,1),
    NguoiGui INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),
    NguoiNhan INT FOREIGN KEY REFERENCES NGUOIDUNG(MaKH),
    NgayGui DATETIME DEFAULT GETDATE(),
    NoiDung NVARCHAR(MAX),
    MaSP INT NULL FOREIGN KEY REFERENCES SanPham(MaSP) ON DELETE SET NULL,
    DaDoc BIT DEFAULT 0
);
---
ALTER TABLE GIOHANG
ADD TongSoLuong INT DEFAULT 0;

ALTER TABLE SANPHAM
ADD DanhGiaTB FLOAT DEFAULT 0,
    TongDanhGia INT DEFAULT 0;

ALTER TABLE GioHang
ADD CONSTRAINT UQ_GioHang_MaKH UNIQUE (MaKH);

---

CREATE TRIGGER TRG_UPDATETONGSOLUONG
ON CT_GIOHANG
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    UPDATE GIOHANG
    SET TONGSOLUONG = (
        SELECT ISNULL(SUM(SOLUONG),0)
        FROM CT_GIOHANG
        WHERE CT_GIOHANG.MaGH = GIOHANG.MaGH
    )
    WHERE MaGH IN (SELECT MaGH FROM inserted UNION SELECT MaGH FROM deleted);
END;

---

CREATE TRIGGER TRG_UPDATEDANHGIATB
ON DANHGIA
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    UPDATE SANPHAM
    SET DANHGIATB = (
        SELECT AVG(SOSAO*1.0)
        FROM DANHGIA
        WHERE DANHGIA.MaSP = SANPHAM.MaSP
    ),
    TONGDANHGIA = (
        SELECT COUNT(*)
        FROM DANHGIA
        WHERE DANHGIA.MaSP = SANPHAM.MaSP
    )
    WHERE MaSP IN (SELECT MaSP FROM inserted UNION SELECT MaSP FROM deleted);
END;